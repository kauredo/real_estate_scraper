/**
 * File generated by js-routes 2.2.5
 * Based on Rails 7.1.5.1 routes of SofiaGalvao::Application
 */
// eslint-disable-next-line
(
// eslint-disable-next-line
() => {
    const hasProp = (value, key) => Object.prototype.hasOwnProperty.call(value, key);
    let NodeTypes;
    (function (NodeTypes) {
        NodeTypes[NodeTypes["GROUP"] = 1] = "GROUP";
        NodeTypes[NodeTypes["CAT"] = 2] = "CAT";
        NodeTypes[NodeTypes["SYMBOL"] = 3] = "SYMBOL";
        NodeTypes[NodeTypes["OR"] = 4] = "OR";
        NodeTypes[NodeTypes["STAR"] = 5] = "STAR";
        NodeTypes[NodeTypes["LITERAL"] = 6] = "LITERAL";
        NodeTypes[NodeTypes["SLASH"] = 7] = "SLASH";
        NodeTypes[NodeTypes["DOT"] = 8] = "DOT";
    })(NodeTypes || (NodeTypes = {}));
    const isBrowser = typeof window !== "undefined";
    const ModuleReferences = {
        CJS: {
            define(routes) {
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                module.exports = routes;
            },
            isSupported() {
                return typeof module === "object";
            },
        },
        AMD: {
            define(routes) {
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                define([], function () {
                    return routes;
                });
            },
            isSupported() {
                return typeof define === "function" && !!define.amd;
            },
        },
        UMD: {
            define(routes) {
                if (ModuleReferences.AMD.isSupported()) {
                    ModuleReferences.AMD.define(routes);
                }
                else {
                    if (ModuleReferences.CJS.isSupported()) {
                        try {
                            ModuleReferences.CJS.define(routes);
                        }
                        catch (error) {
                            if (error.name !== "TypeError")
                                throw error;
                        }
                    }
                }
            },
            isSupported() {
                return (ModuleReferences.AMD.isSupported() ||
                    ModuleReferences.CJS.isSupported());
            },
        },
        ESM: {
            define() {
                // Module can only be defined using ruby code generation
            },
            isSupported() {
                // Its impossible to check if "export" keyword is supported
                return true;
            },
        },
        NIL: {
            define() {
                // Defined using 
            },
            isSupported() {
                return true;
            },
        },
        DTS: {
            // Acts the same as ESM
            define(routes) {
                ModuleReferences.ESM.define(routes);
            },
            isSupported() {
                return ModuleReferences.ESM.isSupported();
            },
        },
    };
    class ParametersMissing extends Error {
        constructor(...keys) {
            super(`Route missing required keys: ${keys.join(", ")}`);
            this.keys = keys;
            Object.setPrototypeOf(this, Object.getPrototypeOf(this));
            this.name = ParametersMissing.name;
        }
    }
    const UriEncoderSegmentRegex = /[^a-zA-Z0-9\-._~!$&'()*+,;=:@]/g;
    const ReservedOptions = [
        "anchor",
        "trailing_slash",
        "subdomain",
        "host",
        "port",
        "protocol",
    ];
    class UtilsClass {
        constructor() {
            this.configuration = {
                prefix: "",
                default_url_options: {},
                special_options_key: "_options",
                serializer: null || this.default_serializer.bind(this),
            };
        }
        default_serializer(value, prefix) {
            if (this.is_nullable(value)) {
                return "";
            }
            if (!prefix && !this.is_object(value)) {
                throw new Error("Url parameters should be a javascript hash");
            }
            prefix = prefix || "";
            const result = [];
            if (this.is_array(value)) {
                for (const element of value) {
                    result.push(this.default_serializer(element, prefix + "[]"));
                }
            }
            else if (this.is_object(value)) {
                for (let key in value) {
                    if (!hasProp(value, key))
                        continue;
                    let prop = value[key];
                    if (this.is_nullable(prop) && prefix) {
                        prop = "";
                    }
                    if (this.is_not_nullable(prop)) {
                        if (prefix) {
                            key = prefix + "[" + key + "]";
                        }
                        result.push(this.default_serializer(prop, key));
                    }
                }
            }
            else {
                if (this.is_not_nullable(value)) {
                    result.push(encodeURIComponent(prefix) + "=" + encodeURIComponent("" + value));
                }
            }
            return result.join("&");
        }
        serialize(object) {
            return this.configuration.serializer(object);
        }
        extract_options(number_of_params, args) {
            const last_el = args[args.length - 1];
            if ((args.length > number_of_params && last_el === 0) ||
                (this.is_object(last_el) &&
                    !this.looks_like_serialized_model(last_el))) {
                if (this.is_object(last_el)) {
                    delete last_el[this.configuration.special_options_key];
                }
                return {
                    args: args.slice(0, args.length - 1),
                    options: last_el,
                };
            }
            else {
                return { args, options: {} };
            }
        }
        looks_like_serialized_model(object) {
            return (this.is_object(object) &&
                !(this.configuration.special_options_key in object) &&
                ("id" in object || "to_param" in object || "toParam" in object));
        }
        path_identifier(object) {
            const result = this.unwrap_path_identifier(object);
            return this.is_nullable(result) ||
                (false &&
                    result === false)
                ? ""
                : "" + result;
        }
        unwrap_path_identifier(object) {
            let result = object;
            if (!this.is_object(object)) {
                return object;
            }
            if ("to_param" in object) {
                result = object.to_param;
            }
            else if ("toParam" in object) {
                result = object.toParam;
            }
            else if ("id" in object) {
                result = object.id;
            }
            else {
                result = object;
            }
            return this.is_callable(result) ? result.call(object) : result;
        }
        partition_parameters(parts, required_params, default_options, call_arguments) {
            // eslint-disable-next-line prefer-const
            let { args, options } = this.extract_options(parts.length, call_arguments);
            if (args.length > parts.length) {
                throw new Error("Too many parameters provided for path");
            }
            let use_all_parts = args.length > required_params.length;
            const parts_options = {
                ...this.configuration.default_url_options,
            };
            for (const key in options) {
                const value = options[key];
                if (!hasProp(options, key))
                    continue;
                use_all_parts = true;
                if (parts.includes(key)) {
                    parts_options[key] = value;
                }
            }
            options = {
                ...this.configuration.default_url_options,
                ...default_options,
                ...options,
            };
            const keyword_parameters = {};
            let query_parameters = {};
            for (const key in options) {
                if (!hasProp(options, key))
                    continue;
                const value = options[key];
                if (key === "params") {
                    if (this.is_object(value)) {
                        query_parameters = {
                            ...query_parameters,
                            ...value,
                        };
                    }
                    else {
                        throw new Error("params value should always be an object");
                    }
                }
                else if (this.is_reserved_option(key)) {
                    keyword_parameters[key] = value;
                }
                else {
                    if (!this.is_nullable(value) &&
                        (value !== default_options[key] || required_params.includes(key))) {
                        query_parameters[key] = value;
                    }
                }
            }
            const route_parts = use_all_parts ? parts : required_params;
            let i = 0;
            for (const part of route_parts) {
                if (i < args.length) {
                    const value = args[i];
                    if (!hasProp(parts_options, part)) {
                        query_parameters[part] = value;
                        ++i;
                    }
                }
            }
            return { keyword_parameters, query_parameters };
        }
        build_route(parts, required_params, default_options, route, absolute, args) {
            const { keyword_parameters, query_parameters } = this.partition_parameters(parts, required_params, default_options, args);
            const missing_params = required_params.filter((param) => !hasProp(query_parameters, param) ||
                this.is_nullable(query_parameters[param]));
            if (missing_params.length) {
                throw new ParametersMissing(...missing_params);
            }
            let result = this.get_prefix() + this.visit(route, query_parameters);
            if (keyword_parameters.trailing_slash) {
                result = result.replace(/(.*?)[/]?$/, "$1/");
            }
            const url_params = this.serialize(query_parameters);
            if (url_params.length) {
                result += "?" + url_params;
            }
            result += keyword_parameters.anchor
                ? "#" + keyword_parameters.anchor
                : "";
            if (absolute) {
                result = this.route_url(keyword_parameters) + result;
            }
            return result;
        }
        visit(route, parameters, optional = false) {
            switch (route[0]) {
                case NodeTypes.GROUP:
                    return this.visit(route[1], parameters, true);
                case NodeTypes.CAT:
                    return this.visit_cat(route, parameters, optional);
                case NodeTypes.SYMBOL:
                    return this.visit_symbol(route, parameters, optional);
                case NodeTypes.STAR:
                    return this.visit_globbing(route[1], parameters, true);
                case NodeTypes.LITERAL:
                case NodeTypes.SLASH:
                case NodeTypes.DOT:
                    return route[1];
                default:
                    throw new Error("Unknown Rails node type");
            }
        }
        is_not_nullable(object) {
            return !this.is_nullable(object);
        }
        is_nullable(object) {
            return object === undefined || object === null;
        }
        visit_cat(
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        [_type, left, right], parameters, optional) {
            const left_part = this.visit(left, parameters, optional);
            let right_part = this.visit(right, parameters, optional);
            if (optional &&
                ((this.is_optional_node(left[0]) && !left_part) ||
                    (this.is_optional_node(right[0]) && !right_part))) {
                return "";
            }
            // if left_part ends on '/' and right_part starts on '/'
            if (left_part[left_part.length - 1] === "/" && right_part[0] === "/") {
                // strip slash from right_part
                // to prevent double slash
                right_part = right_part.substring(1);
            }
            return left_part + right_part;
        }
        visit_symbol(
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        [_type, key], parameters, optional) {
            const value = this.path_identifier(parameters[key]);
            delete parameters[key];
            if (value.length) {
                return this.encode_segment(value);
            }
            if (optional) {
                return "";
            }
            else {
                throw new ParametersMissing(key);
            }
        }
        encode_segment(segment) {
            return segment.replace(UriEncoderSegmentRegex, (str) => encodeURIComponent(str));
        }
        is_optional_node(node) {
            return [NodeTypes.STAR, NodeTypes.SYMBOL, NodeTypes.CAT].includes(node);
        }
        build_path_spec(route, wildcard = false) {
            let key;
            switch (route[0]) {
                case NodeTypes.GROUP:
                    return "(" + this.build_path_spec(route[1]) + ")";
                case NodeTypes.CAT:
                    return (this.build_path_spec(route[1]) + this.build_path_spec(route[2]));
                case NodeTypes.STAR:
                    return this.build_path_spec(route[1], true);
                case NodeTypes.SYMBOL:
                    key = route[1];
                    if (wildcard) {
                        return (key.startsWith("*") ? "" : "*") + key;
                    }
                    else {
                        return ":" + key;
                    }
                    break;
                case NodeTypes.SLASH:
                case NodeTypes.DOT:
                case NodeTypes.LITERAL:
                    return route[1];
                default:
                    throw new Error("Unknown Rails node type");
            }
        }
        visit_globbing(route, parameters, optional) {
            const key = route[1];
            let value = parameters[key];
            delete parameters[key];
            if (this.is_nullable(value)) {
                return this.visit(route, parameters, optional);
            }
            if (this.is_array(value)) {
                value = value.join("/");
            }
            const result = this.path_identifier(value);
            return false
                ? result
                : encodeURI(result);
        }
        get_prefix() {
            const prefix = this.configuration.prefix;
            return prefix.match("/$")
                ? prefix.substring(0, prefix.length - 1)
                : prefix;
        }
        route(parts_table, route_spec, absolute = false) {
            const required_params = [];
            const parts = [];
            const default_options = {};
            for (const [part, { r: required, d: value }] of Object.entries(parts_table)) {
                parts.push(part);
                if (required) {
                    required_params.push(part);
                }
                if (this.is_not_nullable(value)) {
                    default_options[part] = value;
                }
            }
            const result = (...args) => {
                return this.build_route(parts, required_params, default_options, route_spec, absolute, args);
            };
            result.requiredParams = () => required_params;
            result.toString = () => {
                return this.build_path_spec(route_spec);
            };
            return result;
        }
        route_url(route_defaults) {
            const hostname = route_defaults.host || this.current_host();
            if (!hostname) {
                return "";
            }
            const subdomain = route_defaults.subdomain
                ? route_defaults.subdomain + "."
                : "";
            const protocol = route_defaults.protocol || this.current_protocol();
            let port = route_defaults.port ||
                (!route_defaults.host ? this.current_port() : undefined);
            port = port ? ":" + port : "";
            return protocol + "://" + subdomain + hostname + port;
        }
        current_host() {
            var _a;
            return (isBrowser && ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.hostname)) || "";
        }
        current_protocol() {
            var _a, _b;
            return ((isBrowser && ((_b = (_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.protocol) === null || _b === void 0 ? void 0 : _b.replace(/:$/, ""))) || "http");
        }
        current_port() {
            var _a;
            return (isBrowser && ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.port)) || "";
        }
        is_object(value) {
            return (typeof value === "object" &&
                Object.prototype.toString.call(value) === "[object Object]");
        }
        is_array(object) {
            return object instanceof Array;
        }
        is_callable(object) {
            return typeof object === "function" && !!object.call;
        }
        is_reserved_option(key) {
            return ReservedOptions.includes(key);
        }
        configure(new_config) {
            this.configuration = { ...this.configuration, ...new_config };
            return this.configuration;
        }
        config() {
            return { ...this.configuration };
        }
        is_module_supported(name) {
            return ModuleReferences[name].isSupported();
        }
        ensure_module_supported(name) {
            if (!this.is_module_supported(name)) {
                throw new Error(`${name} is not supported by runtime`);
            }
        }
        define_module(name, module) {
            this.ensure_module_supported(name);
            ModuleReferences[name].define(module);
        }
    }
    const Utils = new UtilsClass();
    // We want this helper name to be short
    const __jsr = {
        r(parts_table, route_spec, absolute) {
            return Utils.route(parts_table, route_spec, absolute);
        },
    };
    const result = {
        ...__jsr,
        configure: (config) => {
            return Utils.configure(config);
        },
        config: () => {
            return Utils.config();
        },
        serialize: (object) => {
            return Utils.serialize(object);
        },
        ...{
  /**
   * Generates rails route to
   * (/:locale)/kw(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  about_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"kw"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/admins/password(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  admin_password_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"admins"],[2,[7,"/"],[2,[6,"password"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/admins(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  admin_registration_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"admins"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/admins/sign_in(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  admin_session_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"admins"],[2,[7,"/"],[2,[6,"sign_in"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/admins(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  admins_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"admins"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  backoffice_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/blog_posts/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  backoffice_blog_post_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"blog_posts"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/blog_posts(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  backoffice_blog_posts_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"blog_posts"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/club_stories(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  backoffice_club_stories_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"club_stories"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/club_stories/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  backoffice_club_story_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"club_stories"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/features
   * @param {object | undefined} options
   * @returns {string} route path
   */
  backoffice_flipper_path: __jsr.r({"locale":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[6,"features"]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/listings/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  backoffice_listing_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"listings"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/listing_complexes/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  backoffice_listing_complex_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"listing_complexes"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/listing_complexes(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  backoffice_listing_complexes_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"listing_complexes"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/listings(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  backoffice_listings_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"listings"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/testimonials/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  backoffice_testimonial_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"testimonials"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/testimonials(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  backoffice_testimonials_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"testimonials"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/variables/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  backoffice_variable_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"variables"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/variables(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  backoffice_variables_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"variables"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/blog(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  blog_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"blog"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/blog_photos/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  blog_photo_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"blog_photos"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/blog_photos(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  blog_photos_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"blog_photos"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/blog/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  blog_post_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"blog"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/comprar(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  buy_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"comprar"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/admins/cancel(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  cancel_admin_registration_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"admins"],[2,[7,"/"],[2,[6,"cancel"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/clube-sgg(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  club_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"clube-sgg"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/clube-sgg/regulamento(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  club_rules_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"clube-sgg"],[2,[7,"/"],[2,[6,"regulamento"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/clube-sgg/historias(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  club_stories_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"clube-sgg"],[2,[7,"/"],[2,[6,"historias"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/clube-sgg/historias/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  club_story_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"clube-sgg"],[2,[7,"/"],[2,[6,"historias"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/club_story_photos/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  club_story_photo_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"club_story_photos"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/club_story_photos(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  club_story_photos_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"club_story_photos"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/newsletter_subscriptions/:id/confirm(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  confirm_newsletter_subscription_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"newsletter_subscriptions"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"confirm"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/contactos(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  contact_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"contactos"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/listing_complexes/:id/delete_photo(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  delete_photo_backoffice_listing_complex_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"listing_complexes"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"delete_photo"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/admins/sign_out(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  destroy_admin_session_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"admins"],[2,[7,"/"],[2,[6,"sign_out"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/admins/password/edit(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  edit_admin_password_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"admins"],[2,[7,"/"],[2,[6,"password"],[2,[7,"/"],[2,[6,"edit"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/admins/edit(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  edit_admin_registration_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"admins"],[2,[7,"/"],[2,[6,"edit"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/blog_posts/:id/edit(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  edit_backoffice_blog_post_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"blog_posts"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"edit"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/club_stories/:id/edit(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  edit_backoffice_club_story_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"club_stories"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"edit"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/listings/:id/edit(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  edit_backoffice_listing_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"listings"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"edit"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/listing_complexes/:id/edit(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  edit_backoffice_listing_complex_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"listing_complexes"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"edit"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/testimonials/:id/edit(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  edit_backoffice_testimonial_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"testimonials"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"edit"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/errors/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  error_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"errors"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/faq(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  faq_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"faq"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/listing_complexes/fetch(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  fetch_backoffice_listing_complexes_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"listing_complexes"],[2,[7,"/"],[2,[6,"fetch"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * /good_job
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_path: __jsr.r({}, [2,[7,"/"],[6,"good_job"]]),

  /**
   * Generates rails route to
   * /good_job/
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_root_path: __jsr.r({}, [2,[2,[7,"/"],[6,"good_job"]],[7,"/"]]),

  /**
   * Generates rails route to
   * /good_job/jobs/mass_update(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_mass_update_jobs_path: __jsr.r({"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"jobs"],[2,[7,"/"],[2,[6,"mass_update"],[1,[2,[8,"."],[3,"format"]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/jobs/:id/discard(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_discard_job_path: __jsr.r({"id":{"r":true},"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"jobs"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"discard"],[1,[2,[8,"."],[3,"format"]]]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/jobs/:id/force_discard(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_force_discard_job_path: __jsr.r({"id":{"r":true},"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"jobs"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"force_discard"],[1,[2,[8,"."],[3,"format"]]]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/jobs/:id/reschedule(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_reschedule_job_path: __jsr.r({"id":{"r":true},"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"jobs"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"reschedule"],[1,[2,[8,"."],[3,"format"]]]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/jobs/:id/retry(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_retry_job_path: __jsr.r({"id":{"r":true},"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"jobs"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"retry"],[1,[2,[8,"."],[3,"format"]]]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/jobs(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_jobs_path: __jsr.r({"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"jobs"],[1,[2,[8,"."],[3,"format"]]]]]),

  /**
   * Generates rails route to
   * /good_job/jobs/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_job_path: __jsr.r({"id":{"r":true},"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"jobs"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/jobs/metrics/primary_nav(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_metrics_primary_nav_path: __jsr.r({"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"jobs"],[2,[7,"/"],[2,[6,"metrics"],[2,[7,"/"],[2,[6,"primary_nav"],[1,[2,[8,"."],[3,"format"]]]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/jobs/metrics/job_status(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_metrics_job_status_path: __jsr.r({"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"jobs"],[2,[7,"/"],[2,[6,"metrics"],[2,[7,"/"],[2,[6,"job_status"],[1,[2,[8,"."],[3,"format"]]]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/batches/:id/retry(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_retry_batch_path: __jsr.r({"id":{"r":true},"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"batches"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"retry"],[1,[2,[8,"."],[3,"format"]]]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/batches(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_batches_path: __jsr.r({"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"batches"],[1,[2,[8,"."],[3,"format"]]]]]),

  /**
   * Generates rails route to
   * /good_job/batches/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_batch_path: __jsr.r({"id":{"r":true},"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"batches"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/cron_entries/:cron_key/enqueue(.:format)
   * @param {any} cron_key
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_enqueue_cron_entry_path: __jsr.r({"cron_key":{"r":true},"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"cron_entries"],[2,[7,"/"],[2,[3,"cron_key"],[2,[7,"/"],[2,[6,"enqueue"],[1,[2,[8,"."],[3,"format"]]]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/cron_entries/:cron_key/enable(.:format)
   * @param {any} cron_key
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_enable_cron_entry_path: __jsr.r({"cron_key":{"r":true},"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"cron_entries"],[2,[7,"/"],[2,[3,"cron_key"],[2,[7,"/"],[2,[6,"enable"],[1,[2,[8,"."],[3,"format"]]]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/cron_entries/:cron_key/disable(.:format)
   * @param {any} cron_key
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_disable_cron_entry_path: __jsr.r({"cron_key":{"r":true},"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"cron_entries"],[2,[7,"/"],[2,[3,"cron_key"],[2,[7,"/"],[2,[6,"disable"],[1,[2,[8,"."],[3,"format"]]]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/cron_entries(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_cron_entries_path: __jsr.r({"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"cron_entries"],[1,[2,[8,"."],[3,"format"]]]]]),

  /**
   * Generates rails route to
   * /good_job/cron_entries/:cron_key(.:format)
   * @param {any} cron_key
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_cron_entry_path: __jsr.r({"cron_key":{"r":true},"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"cron_entries"],[2,[7,"/"],[2,[3,"cron_key"],[1,[2,[8,"."],[3,"format"]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/processes(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_processes_path: __jsr.r({"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"processes"],[1,[2,[8,"."],[3,"format"]]]]]),

  /**
   * Generates rails route to
   * /good_job/performance(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_performance_index_path: __jsr.r({"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"performance"],[1,[2,[8,"."],[3,"format"]]]]]),

  /**
   * Generates rails route to
   * /good_job/performance/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_performance_path: __jsr.r({"id":{"r":true},"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"performance"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/pauses(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_pauses_path: __jsr.r({"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"pauses"],[1,[2,[8,"."],[3,"format"]]]]]),

  /**
   * Generates rails route to
   * /good_job/cleaner(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_cleaner_index_path: __jsr.r({"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"cleaner"],[1,[2,[8,"."],[3,"format"]]]]]),

  /**
   * Generates rails route to
   * /good_job/frontend/modules/:version/:id(.:format)
   * @param {any} version
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_frontend_module_path: __jsr.r({"version":{"r":true,"d":"4-9-3"},"id":{"r":true},"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"frontend"],[2,[7,"/"],[2,[6,"modules"],[2,[7,"/"],[2,[3,"version"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /good_job/frontend/static/:version/:id(.:format)
   * @param {any} version
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  good_job_frontend_static_path: __jsr.r({"version":{"r":true,"d":"4-9-3"},"id":{"r":true},"format":{}}, [2,[2,[2,[7,"/"],[6,"good_job"]],[7,"/"]],[2,[6,"frontend"],[2,[7,"/"],[2,[6,"static"],[2,[7,"/"],[2,[3,"version"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/club/join(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  join_club_index_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"club"],[2,[7,"/"],[2,[6,"join"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/empreendimentos(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  latest_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"empreendimentos"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/comprar/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  listing_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"comprar"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/empreendimentos/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  listing_complex_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"empreendimentos"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/admins/password/new(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  new_admin_password_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"admins"],[2,[7,"/"],[2,[6,"password"],[2,[7,"/"],[2,[6,"new"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/admins/sign_up(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  new_admin_registration_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"admins"],[2,[7,"/"],[2,[6,"sign_up"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/admins/sign_in(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  new_admin_session_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"admins"],[2,[7,"/"],[2,[6,"sign_in"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/blog_posts/new(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  new_backoffice_blog_post_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"blog_posts"],[2,[7,"/"],[2,[6,"new"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/club_stories/new(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  new_backoffice_club_story_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"club_stories"],[2,[7,"/"],[2,[6,"new"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/listing_complexes/new(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  new_backoffice_listing_complex_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"listing_complexes"],[2,[7,"/"],[2,[6,"new"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/testimonials/new(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  new_backoffice_testimonial_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"testimonials"],[2,[7,"/"],[2,[6,"new"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/novo_contacto(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  new_contact_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"novo_contacto"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * /rails/conductor/action_mailbox/inbound_emails/new(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  new_rails_conductor_inbound_email_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"conductor"],[2,[7,"/"],[2,[6,"action_mailbox"],[2,[7,"/"],[2,[6,"inbound_emails"],[2,[7,"/"],[2,[6,"new"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/conductor/action_mailbox/inbound_emails/sources/new(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  new_rails_conductor_inbound_email_source_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"conductor"],[2,[7,"/"],[2,[6,"action_mailbox"],[2,[7,"/"],[2,[6,"inbound_emails"],[2,[7,"/"],[2,[6,"sources"],[2,[7,"/"],[2,[6,"new"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/newsletter_subscriptions/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  newsletter_subscription_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"newsletter_subscriptions"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/newsletter_subscriptions(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  newsletter_subscriptions_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"newsletter_subscriptions"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/photos/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  photo_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"photos"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/listing_complexes/:id/photos(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  photos_backoffice_listing_complex_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"listing_complexes"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"photos"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/privacidade(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  privacy_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"privacidade"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * /rails/active_storage/representations/redirect/:signed_blob_id/:variation_key/*filename(.:format)
   * @param {any} signed_blob_id
   * @param {any} variation_key
   * @param {any} filename
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_blob_representation_path: __jsr.r({"signed_blob_id":{"r":true},"variation_key":{"r":true},"filename":{"r":true},"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"active_storage"],[2,[7,"/"],[2,[6,"representations"],[2,[7,"/"],[2,[6,"redirect"],[2,[7,"/"],[2,[3,"signed_blob_id"],[2,[7,"/"],[2,[3,"variation_key"],[2,[7,"/"],[2,[5,[3,"filename"]],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/active_storage/representations/proxy/:signed_blob_id/:variation_key/*filename(.:format)
   * @param {any} signed_blob_id
   * @param {any} variation_key
   * @param {any} filename
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_blob_representation_proxy_path: __jsr.r({"signed_blob_id":{"r":true},"variation_key":{"r":true},"filename":{"r":true},"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"active_storage"],[2,[7,"/"],[2,[6,"representations"],[2,[7,"/"],[2,[6,"proxy"],[2,[7,"/"],[2,[3,"signed_blob_id"],[2,[7,"/"],[2,[3,"variation_key"],[2,[7,"/"],[2,[5,[3,"filename"]],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/conductor/action_mailbox/inbound_emails/:id(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_conductor_inbound_email_path: __jsr.r({"id":{"r":true},"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"conductor"],[2,[7,"/"],[2,[6,"action_mailbox"],[2,[7,"/"],[2,[6,"inbound_emails"],[2,[7,"/"],[2,[3,"id"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/conductor/action_mailbox/:inbound_email_id/incinerate(.:format)
   * @param {any} inbound_email_id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_conductor_inbound_email_incinerate_path: __jsr.r({"inbound_email_id":{"r":true},"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"conductor"],[2,[7,"/"],[2,[6,"action_mailbox"],[2,[7,"/"],[2,[3,"inbound_email_id"],[2,[7,"/"],[2,[6,"incinerate"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/conductor/action_mailbox/:inbound_email_id/reroute(.:format)
   * @param {any} inbound_email_id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_conductor_inbound_email_reroute_path: __jsr.r({"inbound_email_id":{"r":true},"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"conductor"],[2,[7,"/"],[2,[6,"action_mailbox"],[2,[7,"/"],[2,[3,"inbound_email_id"],[2,[7,"/"],[2,[6,"reroute"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/conductor/action_mailbox/inbound_emails/sources(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_conductor_inbound_email_sources_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"conductor"],[2,[7,"/"],[2,[6,"action_mailbox"],[2,[7,"/"],[2,[6,"inbound_emails"],[2,[7,"/"],[2,[6,"sources"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/conductor/action_mailbox/inbound_emails(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_conductor_inbound_emails_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"conductor"],[2,[7,"/"],[2,[6,"action_mailbox"],[2,[7,"/"],[2,[6,"inbound_emails"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/active_storage/direct_uploads(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_direct_uploads_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"active_storage"],[2,[7,"/"],[2,[6,"direct_uploads"],[1,[2,[8,"."],[3,"format"]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/active_storage/disk/:encoded_key/*filename(.:format)
   * @param {any} encoded_key
   * @param {any} filename
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_disk_service_path: __jsr.r({"encoded_key":{"r":true},"filename":{"r":true},"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"active_storage"],[2,[7,"/"],[2,[6,"disk"],[2,[7,"/"],[2,[3,"encoded_key"],[2,[7,"/"],[2,[5,[3,"filename"]],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/info(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_info_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"info"],[1,[2,[8,"."],[3,"format"]]]]]]]),

  /**
   * Generates rails route to
   * /rails/info/properties(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_info_properties_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"info"],[2,[7,"/"],[2,[6,"properties"],[1,[2,[8,"."],[3,"format"]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/info/routes(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_info_routes_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"info"],[2,[7,"/"],[2,[6,"routes"],[1,[2,[8,"."],[3,"format"]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/mailers(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_mailers_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"mailers"],[1,[2,[8,"."],[3,"format"]]]]]]]),

  /**
   * Generates rails route to
   * /rails/action_mailbox/mailgun/inbound_emails/mime(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_mailgun_inbound_emails_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"action_mailbox"],[2,[7,"/"],[2,[6,"mailgun"],[2,[7,"/"],[2,[6,"inbound_emails"],[2,[7,"/"],[2,[6,"mime"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/action_mailbox/mandrill/inbound_emails(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_mandrill_inbound_emails_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"action_mailbox"],[2,[7,"/"],[2,[6,"mandrill"],[2,[7,"/"],[2,[6,"inbound_emails"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/action_mailbox/mandrill/inbound_emails(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_mandrill_inbound_health_check_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"action_mailbox"],[2,[7,"/"],[2,[6,"mandrill"],[2,[7,"/"],[2,[6,"inbound_emails"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/action_mailbox/postmark/inbound_emails(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_postmark_inbound_emails_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"action_mailbox"],[2,[7,"/"],[2,[6,"postmark"],[2,[7,"/"],[2,[6,"inbound_emails"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/action_mailbox/relay/inbound_emails(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_relay_inbound_emails_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"action_mailbox"],[2,[7,"/"],[2,[6,"relay"],[2,[7,"/"],[2,[6,"inbound_emails"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/action_mailbox/sendgrid/inbound_emails(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_sendgrid_inbound_emails_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"action_mailbox"],[2,[7,"/"],[2,[6,"sendgrid"],[2,[7,"/"],[2,[6,"inbound_emails"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/active_storage/blobs/redirect/:signed_id/*filename(.:format)
   * @param {any} signed_id
   * @param {any} filename
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_service_blob_path: __jsr.r({"signed_id":{"r":true},"filename":{"r":true},"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"active_storage"],[2,[7,"/"],[2,[6,"blobs"],[2,[7,"/"],[2,[6,"redirect"],[2,[7,"/"],[2,[3,"signed_id"],[2,[7,"/"],[2,[5,[3,"filename"]],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/active_storage/blobs/proxy/:signed_id/*filename(.:format)
   * @param {any} signed_id
   * @param {any} filename
   * @param {object | undefined} options
   * @returns {string} route path
   */
  rails_service_blob_proxy_path: __jsr.r({"signed_id":{"r":true},"filename":{"r":true},"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"active_storage"],[2,[7,"/"],[2,[6,"blobs"],[2,[7,"/"],[2,[6,"proxy"],[2,[7,"/"],[2,[3,"signed_id"],[2,[7,"/"],[2,[5,[3,"filename"]],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/listings/:id/recover(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  recover_backoffice_listing_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"listings"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"recover"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /(:locale)(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  root_path: __jsr.r({"locale":{},"format":{}}, [2,[7,"/"],[2,[1,[3,"locale"]],[1,[2,[8,"."],[3,"format"]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/vender(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  sell_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"vender"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/servicos(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  services_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"servicos"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * /sitemap(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  sitemap_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"sitemap"],[1,[2,[8,"."],[3,"format"]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/sobre(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  sobre_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"sobre"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/termos_e_condicoes(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  terms_and_conditions_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"termos_e_condicoes"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/tinymce_assets(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  tinymce_assets_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"tinymce_assets"],[1,[2,[8,"."],[3,"format"]]]]]]),

  /**
   * Generates rails route to
   * /toggle_dark_mode(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  toggle_dark_mode_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"toggle_dark_mode"],[1,[2,[8,"."],[3,"format"]]]]]),

  /**
   * Generates rails route to
   * /recede_historical_location(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  turbo_recede_historical_location_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"recede_historical_location"],[1,[2,[8,"."],[3,"format"]]]]]),

  /**
   * Generates rails route to
   * /refresh_historical_location(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  turbo_refresh_historical_location_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"refresh_historical_location"],[1,[2,[8,"."],[3,"format"]]]]]),

  /**
   * Generates rails route to
   * /resume_historical_location(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  turbo_resume_historical_location_path: __jsr.r({"format":{}}, [2,[7,"/"],[2,[6,"resume_historical_location"],[1,[2,[8,"."],[3,"format"]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/listings/update_all(.:format)
   * @param {object | undefined} options
   * @returns {string} route path
   */
  update_all_backoffice_listings_path: __jsr.r({"locale":{},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"listings"],[2,[7,"/"],[2,[6,"update_all"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/listings/:id/update_details(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  update_details_backoffice_listing_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"listings"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"update_details"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * (/:locale)/backoffice/listing_complexes/:id/update_details(.:format)
   * @param {any} id
   * @param {object | undefined} options
   * @returns {string} route path
   */
  update_details_backoffice_listing_complex_path: __jsr.r({"locale":{},"id":{"r":true},"format":{}}, [2,[1,[2,[7,"/"],[3,"locale"]]],[2,[7,"/"],[2,[6,"backoffice"],[2,[7,"/"],[2,[6,"listing_complexes"],[2,[7,"/"],[2,[3,"id"],[2,[7,"/"],[2,[6,"update_details"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]]]),

  /**
   * Generates rails route to
   * /rails/active_storage/disk/:encoded_token(.:format)
   * @param {any} encoded_token
   * @param {object | undefined} options
   * @returns {string} route path
   */
  update_rails_disk_service_path: __jsr.r({"encoded_token":{"r":true},"format":{}}, [2,[7,"/"],[2,[6,"rails"],[2,[7,"/"],[2,[6,"active_storage"],[2,[7,"/"],[2,[6,"disk"],[2,[7,"/"],[2,[3,"encoded_token"],[1,[2,[8,"."],[3,"format"]]]]]]]]]]])}
,
    };
    Utils.define_module("CJS", result);
    return result;
})();
